apiVersion: operators.coreos.com/v1alpha1
kind: ClusterServiceVersion
metadata:
  annotations:
    olm.skipRange: '>=3.2.0 <3.2.3'
    operators.operatorframework.io/builder: operator-sdk-v1.4.0+git
    operators.operatorframework.io/project_layout: ansible.sdk.operatorframework.io/v1
    olm.targetNamespaces: ibm-sls
    operatorframework.io/properties: >-
      {"properties":[{"type":"olm.gvk","value":{"group":"sls.ibm.com","kind":"LicenseClient","version":"v1"}},{"type":"olm.gvk","value":{"group":"sls.ibm.com","kind":"LicenseService","version":"v1"}},{"type":"olm.package","value":{"packageName":"ibm-sls","version":"3.2.3"}}]}
    alm-examples: |-
      [
        {
          "apiVersion": "sls.ibm.com/v1",
          "kind": "LicenseService",
          "metadata": {
            "labels": {
              "app.kubernetes.io/instance": "ibm-sls",
              "app.kubernetes.io/managed-by": "olm",
              "app.kubernetes.io/name": "ibm-sls"
            },
            "name": "sls"
          },
          "spec": {
            "license": {
              "accept": true
            },
            "mongo": {
              "configDb": "admin",
              "nodes": [
                {
                  "host": "host1.domain.com",
                  "port": 30257
                }
              ],
              "secretName": "sls-mongo-credentials"
            },
            "rlks": {
              "storage": {
                "class": "ibmc-block-bronze",
                "size": "5G"
              }
            }
          }
        }
      ]
    capabilities: Full Lifecycle
    olm.operatorNamespace: ibm-sls
    containerImage: >-
      icr.io/cpopen/ibm-sls@sha256:cc2910a7f55ce7d1efc4b141bbebcfc304b0d365a2c58a989bd27026689e6713
    operators.operatorframework.io/internal-objects: '["licenseclients.sls.ibm.com"]'
    operatorframework.io/suggested-namespace: ibm-sls
    description: >-
      Provides an API for a licensing system with RLKS as the backend
      technology.
    olm.operatorGroup: ibm-sls-operator-group
  selfLink: >-
    /apis/operators.coreos.com/v1alpha1/namespaces/ibm-sls/clusterserviceversions/ibm-sls.v3.2.3
  resourceVersion: '19570515'
  name: ibm-sls.v3.2.3
  uid: 81ac4691-f306-4f24-b2c7-cb5f4ec6c49f
  creationTimestamp: '2021-10-26T21:30:47Z'
  generation: 1
  managedFields:
    - apiVersion: operators.coreos.com/v1alpha1
      fieldsType: FieldsV1
      fieldsV1:
        'f:metadata':
          'f:annotations':
            'f:operators.operatorframework.io/internal-objects': {}
            'f:alm-examples': {}
            'f:description': {}
            'f:capabilities': {}
            'f:olm.skipRange': {}
            .: {}
            'f:containerImage': {}
            'f:operatorframework.io/suggested-namespace': {}
            'f:operators.operatorframework.io/project_layout': {}
            'f:operatorframework.io/properties': {}
            'f:operators.operatorframework.io/builder': {}
          'f:labels':
            .: {}
            'f:operatorframework.io/arch.amd64': {}
            'f:operatorframework.io/os.linux': {}
        'f:spec':
          'f:version': {}
          'f:maturity': {}
          'f:provider':
            .: {}
            'f:name': {}
            'f:url': {}
          'f:links': {}
          'f:install':
            .: {}
            'f:spec':
              .: {}
              'f:deployments': {}
            'f:strategy': {}
          'f:maintainers': {}
          'f:description': {}
          'f:installModes': {}
          'f:icon': {}
          'f:customresourcedefinitions':
            .: {}
            'f:owned': {}
            'f:required': {}
          .: {}
          'f:apiservicedefinitions': {}
          'f:replaces': {}
          'f:displayName': {}
          'f:keywords': {}
      manager: catalog
      operation: Update
      time: '2021-10-26T21:30:47Z'
    - apiVersion: operators.coreos.com/v1alpha1
      fieldsType: FieldsV1
      fieldsV1:
        'f:metadata':
          'f:annotations':
            'f:olm.operatorGroup': {}
            'f:olm.operatorNamespace': {}
            'f:olm.targetNamespaces': {}
          'f:labels':
            'f:olm.api.6883dd134213d19a': {}
            'f:olm.api.6acf921c81d23d3': {}
            'f:olm.api.eb398ce8dfd60b37': {}
            'f:operators.coreos.com/ibm-sls.ibm-sls': {}
        'f:status':
          .: {}
          'f:conditions': {}
          'f:lastTransitionTime': {}
          'f:lastUpdateTime': {}
          'f:message': {}
          'f:phase': {}
          'f:reason': {}
          'f:requirementStatus': {}
      manager: olm
      operation: Update
      time: '2021-10-26T21:32:39Z'
  namespace: ibm-sls
  labels:
    olm.api.6883dd134213d19a: required
    olm.api.6acf921c81d23d3: provided
    olm.api.eb398ce8dfd60b37: provided
    operatorframework.io/arch.amd64: supported
    operatorframework.io/os.linux: supported
    operators.coreos.com/ibm-sls.ibm-sls: ''
spec:
  customresourcedefinitions:
    owned:
      - kind: LicenseClient
        name: licenseclients.sls.ibm.com
        version: v1
      - description: Represents the Suite License Service installation
        displayName: License Service
        kind: LicenseService
        name: licenseservices.sls.ibm.com
        resources:
          - kind: ConfigMap
            name: ''
            version: v1
          - kind: Deployment
            name: ''
            version: v1
          - kind: PersistentVolumeClaim
            name: ''
            version: v1
          - kind: Secret
            name: ''
            version: v1
          - kind: Service
            name: ''
            version: v1
          - kind: ServiceAccount
            name: ''
            version: v1
          - kind: Role
            name: ''
            version: rbac.authorization.k8s.io/v1
          - kind: RoleBinding
            name: ''
            version: rbac.authorization.k8s.io/v1
        specDescriptors:
          - description: >-
              Select to accept SLS license terms. License available at
              https://ibm.biz/SLS31-License
            displayName: Accept License
            path: license.accept
            value:
              - false
            x-descriptors:
              - 'urn:alm:descriptor:com.tectonic.ui:booleanSwitch'
          - description: >-
              Declares the top level domain that will be used for SLS. SLS will
              be exposed through a route if this is set at
              {name}.{namespace}.{domain}
            displayName: Domain
            path: domain
            x-descriptors:
              - 'urn:alm:descriptor:com.tectonic.ui:text'
          - description: RLKS Licensing Key Server
            displayName: RLKS Details
            path: rlks
            x-descriptors:
              - 'urn:alm:descriptor:com.tectonic.ui:fieldGroup:RLKS Configuration'
              - 'urn:alm:descriptor:com.tectonic.ui:object'
          - description: >-
              The name of the storage class to use for RLKS persistence. Must
              allow non-root users read and write capabilities.
            displayName: Storage Class
            path: rlks.storage.class
            x-descriptors:
              - 'urn:alm:descriptor:com.tectonic.ui:fieldGroup:RLKS Configuration'
              - 'urn:alm:descriptor:com.tectonic.ui:text'
          - description: >-
              The size of the PersistentVolumeClaim against the storage class
              provided
            displayName: Storage Size
            path: rlks.storage.size
            x-descriptors:
              - >-
                urn:alm:descriptor:com.tectonic.ui:fieldGroup:MongoDB
                Configuration
              - 'urn:alm:descriptor:com.tectonic.ui:text'
          - description: MongoDB Details
            displayName: MongoDB Details
            path: mongo
            x-descriptors:
              - >-
                urn:alm:descriptor:com.tectonic.ui:fieldGroup:MongoDB
                Configuration
              - 'urn:alm:descriptor:com.tectonic.ui:object'
          - description: To configure multiple nodes use the YAML editor
            displayName: Hostname
            path: 'mongo.nodes[0].host'
            x-descriptors:
              - >-
                urn:alm:descriptor:com.tectonic.ui:fieldGroup:MongoDb
                Configuration
              - 'urn:alm:descriptor:com.tectonic.ui:text'
          - description: To configure multiple nodes use the YAML editor
            displayName: Port Number
            path: 'mongo.nodes[0].port'
            x-descriptors:
              - >-
                urn:alm:descriptor:com.tectonic.ui:fieldGroup:MongoDb
                Configuration
              - 'urn:alm:descriptor:com.tectonic.ui:number'
          - description: ConfigDb to use for authentication
            displayName: ConfigDb
            path: mongo.configDb
            x-descriptors:
              - >-
                urn:alm:descriptor:com.tectonic.ui:fieldGroup:MongoDb
                Configuration
              - 'urn:alm:descriptor:com.tectonic.ui:text'
          - description: Authentication mechanism to use for authentication
            displayName: Authentication Mechanism
            path: mongo.authMechanism
            x-descriptors:
              - >-
                urn:alm:descriptor:com.tectonic.ui:fieldGroup:MongoDb
                Configuration
              - 'urn:alm:descriptor:com.tectonic.ui:select:DEFAULT'
              - 'urn:alm:descriptor:com.tectonic.ui:select:PLAIN'
          - description: Configurable retryable writes for mongo
            displayName: Retryable Writes
            path: mongo.retryWrites
            x-descriptors:
              - >-
                urn:alm:descriptor:com.tectonic.ui:fieldGroup:MongoDb
                Configuration
              - 'urn:alm:descriptor:com.tectonic.ui:booleanSwitch'
          - description: Secret holding the MongoDb username and password
            displayName: Credentials Secret
            path: mongo.secretName
            x-descriptors:
              - >-
                urn:alm:descriptor:com.tectonic.ui:fieldGroup:MongoDb
                Configuration
              - 'urn:alm:descriptor:io.kubernetes:Secret'
          - description: License Terms
            displayName: License Terms
            path: license
            x-descriptors:
              - 'urn:alm:descriptor:com.tectonic.ui:object'
          - description: >-
              Select to accept SLS license terms. License available at
              https://ibm.biz/MAS84-License
            displayName: Accept License
            path: license.accept
            value:
              - false
            x-descriptors:
              - 'urn:alm:descriptor:com.tectonic.ui:booleanSwitch'
          - description: CA
            displayName: CA
            path: ca
            x-descriptors:
              - 'urn:alm:descriptor:com.tectonic.ui:fieldGroup:CA'
              - 'urn:alm:descriptor:com.tectonic.ui:advanced'
              - 'urn:alm:descriptor:com.tectonic.ui:object'
          - description: Settings
            displayName: Settings
            path: settings
            x-descriptors:
              - 'urn:alm:descriptor:com.tectonic.ui:fieldGroup:Settings'
              - 'urn:alm:descriptor:com.tectonic.ui:advanced'
              - 'urn:alm:descriptor:com.tectonic.ui:object'
        statusDescriptors:
          - description: SLS API URL
            displayName: SLS API URL
            path: url
            x-descriptors:
              - 'urn:alm:descriptor:org.w3:link'
          - description: SLS CA Certificate
            displayName: SLS CA Certificate
            path: ca.secretName
            x-descriptors:
              - 'urn:alm:descriptor:io.kubernetes:Secret'
          - description: >-
              SLS Registration Key. Used to authorize applications to register
              clients with SLS.
            displayName: SLS Registration Key
            path: registrationKey
            x-descriptors:
              - 'urn:alm:descriptor:text'
          - description: >-
              Suite Registration Info. Contains required properties to configure
              SLS for a suite.
            displayName: Suite Registration Info
            path: registrationInfo.cmName
            x-descriptors:
              - 'urn:alm:descriptor:io.kubernetes:ConfigMap'
          - description: SLS License ID. Maps to host ID value in License Key Center.
            displayName: SLS License ID
            path: licenseId
            x-descriptors:
              - 'urn:alm:descriptor:text'
          - description: SLS deployment conditions
            displayName: Deployment Conditions
            path: conditions
            x-descriptors:
              - 'urn:alm:descriptor:io.kubernetes.conditions'
        version: v1
    required:
      - description: Truststore desc via dep
        displayName: Truststore displayName via dep
        kind: Truststore
        name: truststores.truststore-mgr.ibm.com
        version: v1
  apiservicedefinitions: {}
  keywords:
    - ibm
    - sls
  displayName: IBM Suite License Service
  provider:
    name: IBM
    url: 'https://ibm.com'
  maturity: stable
  installModes:
    - supported: true
      type: OwnNamespace
    - supported: true
      type: SingleNamespace
    - supported: false
      type: MultiNamespace
    - supported: false
      type: AllNamespaces
  version: 3.2.3
  icon:
    - base64data: >-
        
      mediatype: image/png
  links:
    - name: IBM
      url: 'https://ibm.com'
  install:
    spec:
      deployments:
        - name: ibm-sls-controller-manager
          spec:
            replicas: 1
            selector:
              matchLabels:
                app.kubernetes.io/instance: ibm-sls
                app.kubernetes.io/managed-by: olm
                app.kubernetes.io/name: ibm-sls
                control-plane: controller-manager
            strategy: {}
            template:
              metadata:
                annotations:
                  productId: c863fcafa34e460299d0b7a2174074a3
                  productMetric: FREE
                  productName: IBM Suite License Service
                creationTimestamp: null
                labels:
                  app.kubernetes.io/instance: ibm-sls
                  app.kubernetes.io/managed-by: olm
                  app.kubernetes.io/name: ibm-sls
                  control-plane: controller-manager
              spec:
                containers:
                  - env:
                      - name: WATCH_NAMESPACE
                        valueFrom:
                          fieldRef:
                            fieldPath: 'metadata.annotations[''olm.targetNamespaces'']'
                    image: >-
                      icr.io/cpopen/ibm-sls@sha256:cc2910a7f55ce7d1efc4b141bbebcfc304b0d365a2c58a989bd27026689e6713
                    imagePullPolicy: Always
                    livenessProbe:
                      exec:
                        command:
                          - ansible
                          - '--version'
                      failureThreshold: 3
                      periodSeconds: 60
                      successThreshold: 1
                      timeoutSeconds: 30
                    name: manager
                    readinessProbe:
                      exec:
                        command:
                          - ansible
                          - '--version'
                      failureThreshold: 3
                      initialDelaySeconds: 10
                      periodSeconds: 60
                      successThreshold: 1
                      timeoutSeconds: 30
                    resources:
                      limits:
                        cpu: '2'
                        memory: 2096Mi
                      requests:
                        cpu: 500m
                        memory: 512Mi
                    volumeMounts:
                      - mountPath: /var/lib/image-map
                        name: image-map
                imagePullSecrets:
                  - name: ibm-entitlement
                serviceAccount: ibm-sls-operator
                terminationGracePeriodSeconds: 10
                volumes:
                  - configMap:
                      defaultMode: 420
                      name: ibm-sls-image-map
                      optional: true
                    name: image-map
    strategy: deployment
  maintainers:
    - email: parkerda@uk.ibm.com
      name: David Parker
  description: >-
    # Introduction


    IBM Suite License Service (SLS) is a token-based licensing system based on
    Rational License Key Server (RLKS) with MongoDB as the data store.


    Capabilities:


    - License Mgmt APIs. Provides license management capabilities.

    - Token Pool APIs. Provides basic reporting stats on token usage.

    - Entitlement APIs. Provides the ability to configure and upload
    entitlements to the licensing system.

    - Reportings APIs. Provides historical reports on token usage, license
    usage, and auditing events.

    - Configuration APIs. Provides the ability to dynamically enforce or ignore
    compliance.

    - Registration APIs. Provides client registration capabilities.

    - Client Management APIs. Provides client management capabilities.


    # Details


    ## Prerequisites


    - Compute architecture required: 64-bit Intel/AMD x86

    - Supported cloud type: rhocp4 Red Hat OpenShift Container Platform 4

    - A MongoDB cluster that is accessible from the OpenShift cluster using TLS

    - An IBM Entitled Registry key


    ### Install cert-manager


    The version of cert-manager available from OperatorHub is out of date, you
    need to install cert-manager 1.1.0 (or newer)


    ```bash

    oc create namespace cert-manager

    oc apply -f
    https://github.com/jetstack/cert-manager/releases/download/v1.1.0/cert-manager.yaml

    ```


    For more information, refer to the [installation
    instructions](https://cert-manager.io/docs/installation/openshift/#installing-with-regular-manifests)


    ### Configure entitlement


    Create your namespace, for example, `ibm-sls` and create a Docker secret
    that is named `ibm-entitlement` containing your entitlement key for the IBM
    Entitled Registry:


    ```bash

    ER_KEY=<your-er-key>

    oc new-project ibm-sls

    oc -n ibm-sls create secret docker-registry ibm-entitlement \
      --docker-server=cp.icr.io \
      --docker-username=cp \
      --docker-password=$ER_KEY \
    ```


    ### Configure MongoDB credentials


    Create a secret in the namespace where you plan to deploy SLS that contains
    the MongoDB credentials:


    ```yaml

    apiVersion: v1

    kind: Secret

    type: Opaque

    metadata:
      name: sls-mongo-credentials
      namespace: ibm-sls
    stringData:
      username: '<username>'
      password: '<password>'
    ```


    ## Configuration


    ### License


    SLS requires acceptance of the license terms. If the license isn’t accepted,
    SLS is not deployed. Set the license accept flag in the LicenseService CR.


    ### Storage


    SLS requires a PVC to store the license file. Set the storage class and size
    of the PVC in the LicenseService CR.


    #### Requirements


    There are no specific performance requirements for the storage class and it
    requires only minimal capacity (less than 1 Gb).


    View a list of available storage classes in your cluster by executing the
    following command: `oc get storageclasses`. Choose the cheapest or lowest
    quality of service storage class available in your cluster, and set the size
    to the lowest value supported by the storage class.


    If you are using NFS backed storage, ensure that the storage class is rw
    accessible for non-root users. For example, in IBM Cloud use
    `ibmc-file-bronze-gid` instead of `ibmc-file-bronze`.


    #### Storage on IBM Cloud


    Due to the minimal requirements most storage classes are supported, but the
    following IBM Cloud storage classes have been tested with:


    - ibmc-file-bronze-gid

    - ibmc-block-bronze


    #### Encryption


    To protect your data, use storage with passive encryption enabled. No active
    encryption is performed by the licensing systems that use the persistent
    volume.


    ### MongoDB


    SLS requires MongoDB as a data store. Set the MongoDB hosts, credentials
    secret name, authentication mechanism, and authentication database in the
    LicenseService CR.


    ### Domain


    SLS can be configured to be externally accessible through a route by setting
    the domain property in the LicenseService CR. Set the domain if SLS is used
    by application suites that are installed in separate OpenShift clusters.


    ### CA


    SLS can be configured to use a provided CA keypair for generating
    certificates by adding the CA keypair to a secret in the SLS namespace and
    setting the CA keypair secret name in the LicenseService CR. SLS generates
    its own root CA if a CA keypair is not provided.


    ## Installing


    Complete the following LicenseService CR template based on the configuration
    steps.


    Bare Minimum:


    ```yaml

    apiVersion: sls.ibm.com/v1

    kind: LicenseService

    metadata:
      name: sls
      namespace: ibm-sls
    spec:
      license:
        accept: true
      mongo:
        configDb: admin
        nodes:
        - host: host1.domain.com
          port: 27017
        secretName: sls-mongo-credentials
      rlks:
        storage:
          class: ibmc-file-bronze-gid
          size: 5G
    ```


    All Filled:


    ```yaml

    apiVersion: sls.ibm.com/v1

    kind: LicenseService

    metadata:
      name: sls
      namespace: ibm-sls
    spec:
      license:
        accept: true
      domain: domain.com
      ca:
        secretName: ca-keypair
      mongo:
        configDb: admin
        nodes:
        - host: host1.domain.com
          port: 27017
        secretName: sls-mongo-credentials
        authMechanism: DEFAULT
        retryWrites: true
        certificates:
        - alias: mongoca
          crt: |-
            -----BEGIN CERTIFICATE-----
            ...
            -----END CERTIFICATE-----
      rlks:
        storage:
          class: ibmc-file-bronze-gid
          size: 5G
    ```


    Apply the LicenseService CR to deploy SLS.


    The SLS deployment can take up to 10 minutes. The SLS deployment is finished
    when it reports that it is `Ready`:


    ```sh

    kubectl get -n ibm-sls licenseservice sls


    NAME   RECONCILING   READY   INITIALIZED   LICENSEID      REGISTRATIONKEY

    sls    True          True    True          0242ac110002  
    44415453574841434b4a554c4553

    ```


    ## Application Suite Configuration


    Application suites such as Maximo Application Suite (MAS) configure the SLS
    integration by completing a registration process with SLS.


    The registration process adds the application suite to the SLS client
    registry and provisions an X.509 certificate for the application suite to
    use SLS APIs (SLS requires mutualTLS).


    The registration process requires an SLS API URL, an SLS registration key,
    and an SLS CA certificate. All properties can be found in the SLS status and
    in the Suite Registration CM:


    ```sh

    kubectl get -n ibm-sls cm sls-suite-registration -o yaml


    kind: ConfigMap

    apiVersion: v1

    metadata:
      name: sls-suite-registration
      namespace: ibm-sls
    data:
      url: <your-sls-api-url>
      registrationKey: <your-registration-key>
      ca: <your-sls-ca>
    ```


    ## Verification


    Save the SLS client key, cert, and CA (SLS requires mutualTLS):


    ```sh

    oc get secret -n ibm-sls sls-cert-client -o jsonpath='{.data.tls\.key}' |
    base64 -d -w 0 > tls.key

    oc get secret -n ibm-sls sls-cert-client -o jsonpath='{.data.tls\.crt}' |
    base64 -d -w 0 > tls.crt

    oc get secret -n ibm-sls sls-cert-client -o jsonpath='{.data.ca\.crt}' |
    base64 -d -w 0 > ca.crt

    ```


    Set up port forwarding to expose the internal API outside of the cluster:


    ```sh

    oc port-forward service/sls 7000:443

    ```


    ### Verify that the API is running


    ```sh

    curl -ik --cert tls.crt --key tls.key --cacert ca.crt
    https://localhost:7000/api/entitlement/config

    HTTP/2 200

    x-powered-by: Servlet/4.0

    content-type: application/json

    date: Mon, 19 Apr 2021 21:29:38 GMT

    content-language: en-GB


    {'rlks':{'configuration':'single','hosts':[{'id':'0242ac110002','hostname':'sls-rlks-0.rlks','port':27000}]}}

    ```


    ### Upload an entitlement File


    ```sh

    curl -ik --cert tls.crt --key tls.key --cacert ca.crt -X PUT -F
    'file=@entitlement.lic' https://localhost:7000/api/entitlement/file

    HTTP/1.1 100 Continue

    Content-Length: 0

    Date: Mon, 12 Oct 2020 08:56:59 GMT


    HTTP/1.1 200 OK

    Date: Mon, 12 Oct 2020 08:57:18 GMT

    X-Powered-By: Servlet/4.0

    Content-Length: 0

    Content-Language: en-GB

    ```


    ### Check token pool


    ```sh

    curl -ik --cert tls.crt --key tls.key --cacert ca.crt
    https://localhost:7000/api/tokens

    HTTP/1.1 200 OK

    X-Powered-By: Servlet/4.0

    Content-Type: application/json

    Date: Mon, 12 Oct 2020 09:02:02 GMT

    Content-Language: en-GB

    Transfer-Encoding: chunked


    [{'tokenId':'AppPoints','entitled':100,'used':0,'concurrent':0,'reserved':0,'expirationDate':'2023-08-30T00:00:00Z','available':100,'issuedDate':'2020-04-22T00:00:00Z'}]

    ```


    ## Resources Required


    Minimum scheduling capacity:


    | Software  | Memory (GB) | CPU (cores) | Disk (GB) | Nodes |

    | --------- | ----------- | ----------- | --------- | ----- |

    | **Total** |   0.6       |  900m       |  1        | 1     |


    ## Upgrades


    SLS supports in-place upgrades for patch and minor upgrades. It is
    recommended to complete the backup procedure before upgrading.


    Refer to the official Red Hat [documentation for upgrading operators
    installed using Operator Lifecycle
    Manager](https://access.redhat.com/documentation/en-us/openshift_container_platform/4.6/html/operators/administrator-tasks#olm-upgrading-operators).


    ## Rollback


    SLS does not support downgrades as it is not supported by the Operator
    Lifecycle Manager. To rollback, reinstall SLS using the backup and restore
    procedure or contact IBM support for a potential hotfix.


    ## Backup


    ### Backup process:


    1. Back up a snapshot of the mongo database (all collections)


    2. Save the SLS CA keypair secret


    3. Make a note of the `licenseId` and `registrationKey`:


    ```sh

    kubectl get licenseservice/sls


    NAME   RECONCILING   READY   INITIALIZED   LICENSEID      REGISTRATIONKEY

    sls    True          True    True          0242ac110002  
    44415453574841434b4a554c4553

    ```


    ### Restore process:


    1. Restore the mongo database snapshot (all collections)


    2. Restore the SLS CA keypair secret, set the `ca.secretName` value in the
    LicenseService CR


    3. Create a secret that is called `sls-bootstrap` with the `licenseId` and
    `registrationKey` set:


    ```yaml

    apiVersion: v1

    kind: Secret

    metadata:
      name: sls-bootstrap
    stringData:
      licensingId: 0242ac110002
      registrationKey: 44415453574841434b4a554c4553
    ```


    4. Reapply the LicenseService CR


    5. Reupload the license file


    6. Reregister application suites


    ## Limitations


    - The operator supports only single namespace deployment

    - Multiple instances of the operator can be deployed in a single cluster

    - Multiple installations of the LicenseServer Instance cannot be deployed in
    the same namespace


    ## SecurityContextConstraints Requirements

    The operator uses the Openshift default `restricted` SCC (Security Context
    Constraints).
  replaces: ibm-sls.v3.2.0
status:
  conditions:
    - lastTransitionTime: '2021-10-26T21:30:47Z'
      lastUpdateTime: '2021-10-26T21:30:47Z'
      message: requirements not yet checked
      phase: Pending
      reason: RequirementsUnknown
    - lastTransitionTime: '2021-10-26T21:30:47Z'
      lastUpdateTime: '2021-10-26T21:30:47Z'
      message: one or more requirements couldn't be found
      phase: Pending
      reason: RequirementsNotMet
    - lastTransitionTime: '2021-10-26T21:30:47Z'
      lastUpdateTime: '2021-10-26T21:30:47Z'
      message: 'all requirements found, attempting install'
      phase: InstallReady
      reason: AllRequirementsMet
    - lastTransitionTime: '2021-10-26T21:30:48Z'
      lastUpdateTime: '2021-10-26T21:30:48Z'
      message: waiting for install components to report healthy
      phase: Installing
      reason: InstallSucceeded
    - lastTransitionTime: '2021-10-26T21:30:48Z'
      lastUpdateTime: '2021-10-26T21:30:48Z'
      message: >-
        installing: waiting for deployment ibm-sls-controller-manager to become
        ready: deployment "ibm-sls-controller-manager" not available: Deployment
        does not have minimum availability.
      phase: Installing
      reason: InstallWaiting
    - lastTransitionTime: '2021-10-26T21:32:39Z'
      lastUpdateTime: '2021-10-26T21:32:39Z'
      message: install strategy completed with no errors
      phase: Succeeded
      reason: InstallSucceeded
  lastTransitionTime: '2021-10-26T21:32:39Z'
  lastUpdateTime: '2021-10-26T21:32:39Z'
  message: install strategy completed with no errors
  phase: Succeeded
  reason: InstallSucceeded
  requirementStatus:
    - group: apiextensions.k8s.io
      kind: CustomResourceDefinition
      message: CRD is present and Established condition is true
      name: licenseclients.sls.ibm.com
      status: Present
      uuid: 9c5fc1e4-3b1e-4ac1-9656-a9406bc25900
      version: v1
    - group: apiextensions.k8s.io
      kind: CustomResourceDefinition
      message: CRD is present and Established condition is true
      name: licenseservices.sls.ibm.com
      status: Present
      uuid: eb728e7d-bcc3-4546-b205-73d3a9253b46
      version: v1
    - group: apiextensions.k8s.io
      kind: CustomResourceDefinition
      message: CRD is present and Established condition is true
      name: truststores.truststore-mgr.ibm.com
      status: Present
      uuid: 5535c8d3-1d94-4480-ae36-5c7123330e76
      version: v1
